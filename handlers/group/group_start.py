from filters import IsGroup, GroupNotRegister, GroupReRegister, SwearCheck, CheckSubscribe, IsNightTime, EstateCheck, \
    GroupDelete
from loader import dp
from aiogram import types
from aiogram.dispatcher import FSMContext

from utils import check_code, is_chat_member


# @dp.message_handler(GroupFilter())
# async def echo_group(message: types.Message, state: FSMContext):
#     print(await state.get_data())
#     print(await state.get_data())
#     print(dir(state))
#     await message.answer(message.text)


@dp.message_handler(IsNightTime())
async def night_messages(message: types.Message):
    await message.answer('–ü—É–±–ª–∏–∫–æ–≤–∞—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏—è –º–æ–∂–Ω–æ —Ç–æ–ª—å–∫–æ —Å 7:00 –¥–æ 22:00')
    admin_list = [i[:-1] for i in open('data/admins.txt', 'r').readlines()]
    for admin in admin_list:
        await message.forward(admin)
    await message.delete()


@dp.message_handler(SwearCheck())
async def swearing_check(message: types.Message):
    admin_list = [i[:-1] for i in open('data/admins.txt', 'r').readlines()]
    print(admin_list)
    for admin in admin_list:
        await message.forward(int(admin))
    await message.delete()


@dp.message_handler(IsGroup(), GroupNotRegister())
async def register(message: types.Message):
    if check_code(message.text):
        with open('data/chats.txt', 'a') as f:
            f.write(str(message.chat.id) + '\n')
    await message.answer('–ì—Ä—É–ø–ø–∞ –±—ã–ª–∞ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ —Å–ø–∏—Å–æ–∫ —Ä–∞—Å—Å—ã–ª–∫–∏')
    await message.delete()


@dp.message_handler(GroupReRegister())
async def re_register(message: types.Message):
    await message.answer(text='–î–∞–Ω–Ω–∞—è –≥—Ä—É–ø–ø–∞ —É–∂–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Å–ø–∏—Å–∫–µ —Ä–∞—Å—Å—ã–ª–∫–∏')
    await message.delete()


@dp.message_handler(GroupDelete())
async def group_delete(message: types.Message):
    code_list = [i[:-1] for i in open('data/chats.txt', 'r').readlines()]
    code_list.remove(str(message.chat.id))
    print(code_list)
    with open('data/chats.txt', 'w') as f:
        f.writelines(code_list)

    await message.answer('–ì—Ä—É–ø–ø–∞ –±—ã–ª–∞ —É–¥–∞–ª–µ–Ω–∞ –∏–∑ —Å–ø–∏—Å–∫–∞ —Ä–∞—Å—Å—ã–ª–∫–∏')
    await message.delete()
    # await message.chat.leave()


@dp.message_handler(IsGroup(), CheckSubscribe())
async def non_subscriber(message: types.Message):
    keyboard = types.InlineKeyboardMarkup().add(
        types.InlineKeyboardButton('–ò–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏ –±–µ–∑ –≥—Ä–∞–Ω–∏—Ü', url='https://t.me/investbezgranic'))
    await message.answer(text=f'{message.from_user.first_name} {message.from_user.last_name} –¥–ª—è —Ç–æ–≥–æ, —á—Ç–æ –±—ã '
                              f'–æ–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏–µ –≤ –≥—Ä—É–ø–ø–µ –í–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –Ω–∞—à –∫–∞–Ω–∞–ª üëáÔ∏è',
                         reply_markup=keyboard)
    await message.delete()


@dp.message_handler(IsGroup(), EstateCheck())
async def for_all(message: types.Message):
    keyboard = types.InlineKeyboardMarkup().add(
        types.InlineKeyboardButton("–ú–æ–π–î–æ–º", url="https://t.me/MoyDom_Rielty_bot"))
    await message.answer(text=f'–í—ã –º–æ–∂–µ—Ç–µ —Ä–∞–∑–º–µ—Å—Ç–∏—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏–µ –ø–æ –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏ —Ç–æ–ª—å–∫–æ —á–µ—Ä–µ–∑ –ø—É–±–ª–∏–∫–∞—Ü–∏—é –æ–±—ä—è–≤–ª–µ–Ω–∏—è –≤ '
                              f'–Ω–∞—à–µ–º –±–æ—Ç–µ "–ú–æ–π–î–æ–º"',
                         reply_markup=keyboard)
    admin_list = [i[:-1] for i in open('data/admins.txt', 'r').readlines()]
    for admin in admin_list:
        await message.forward(admin)
    await message.delete()
